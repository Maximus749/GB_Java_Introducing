package HW_2;
//Урок 2. Принципы ООП Абстракция и интерфейсы. Пример проектирования
//        Допустим, в программе есть класс Кот. У кота есть кличка и аппетит (сколько единиц еды он потребляет за приём
//        пищи). Эти поля мы заполняем с помощью конструктора. Также есть метод eat(), который заставляет
//        кота покушать, но пока что он пустой, так как неизвестно, откуда кот должен брать еду:

//    Чтобы можно было хранить еду, создадим класс Тарелка с полем food (еда измеряется в целых
//        числах и не важно, что это за единицы измерения). При создании тарелки мы можем указать
//        начальное значение food. В процессе работы с помощью метода info() можно вывести в консоль
//        информацию о тарелке.

//    Если в методе main() создать объекты этих классов, то можно узнать информацию о тарелке и
//    вызвать пустой метод eat() у кота. Эти объекты пока никак не могут взаимодействовать между собой.
//        Можно добавить в классы геттеры и сеттеры и получить код вроде.

public class Main {
    public static void main(String[] args) {
//        Cat cat1 = new Cat("Barsik", 9);
//        Cat cat2 = new Cat("Pushok", 11);
//        Cat cat3 = new Cat("Murzik", 16);
        Plate plate = new Plate(35);
        Cat[] cats = {new Cat("Barsik", 9),
                new Cat("Pushok", 11),
                new Cat("Murzik", 16)
        };
        for (Cat cat: cats) {
            cat.eat(plate);
            System.out.println(cat.isSatiety());
        }
        plate.info();
        plate.addFood(15);
        plate.info();

    }
}
//ЗАДАНИЕ
//
//        Сделать так, чтобы в тарелке с едой не могло получиться отрицательного количества еды (например, в миске 10 еды, а кот пытается покушать 15-20).
//        Каждому коту нужно добавить поле сытость (когда создаем котов, они голодны). Если коту удалось покушать (хватило еды), сытость = true.
//        Считаем, что если коту мало еды в тарелке, то он её просто не трогает, то есть не может быть наполовину сыт (это сделано для упрощения логики программы).
//        Создать массив котов и тарелку с едой, попросить всех котов покушать из этой тарелки и потом вывести информацию о сытости котов в консоль.
//        Добавить в тарелку метод, с помощью которого можно было бы добавлять еду в тарелку.
//        Достаточно выполнить первые 2 подпункта задачи.


